#!/bin/bash

# Makepass: Generate passwords with the power of "tr"
# Version:  0.1
# Build:    2019-10-31
# Author:   Heiko Barth
# Licence:  Beer-Ware (See: http://en.wikipedia.org/wiki/Beerware)

APP=${0##*/}
VER=0.1
RNG=/dev/random

CHARSET=${1:-[:alnum:]}	# default to 'all letters and digits'
COUNT=${2:-20}		# default to 20

if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
        {
		read -d '' CHARSETS <<-"EOF"
			[:alnum:]
			all letters and digits

			[:alpha:]
			all letters

			[:blank:]
			all horizontal whitespace

			[:cntrl:]
			all control characters

			[:digit:]
			all digits

			[:graph:]
			all printable characters, not including space

			[:lower:]
			all lower case letters

			[:print:]
			all printable characters, including space

			[:punct:]
			all punctuation characters

			[:space:]
			all horizontal or vertical whitespace

			[:upper:]
			all upper case letters

			[:xdigit:]
			all hexadecimal digits
		EOF
		echo "$APP $VER"
	        echo
        	echo "Syntax: $APP [<character set>] [<count>]"
	        echo
	        echo "Predefined character sets:"
        	echo
	        echo "$CHARSETS" | column -e
	} >&2
        exit 1
fi

checkBinarys() {
        for i in "$@"; do
                hash "$i" 2>/dev/null || {
                        echo "Binary missing: $i" >&2
                        echo >&2
                        exit 1
                }
        done
}
checkBinarys "head" "tr"

echo -n "Password: "
for ((i=1; i<=COUNT; i++)); do
	echo -n "$(tr -dc "$CHARSET" < $RNG | head -c 1)"
done

echo
echo
